AWSTemplateFormatVersion: '2010-09-09'

Description: Sample CloudFormation template with YAML - RDS Definition Depends on sample-vpc-cfn.yml, sample-sg-cfn.yml

Parameters:
  VPCName:
    Description: Target VPC Stack Name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: debugroom-sample-kubernetes-vpc
  DBName:
    Description: Database Master User Name
    Type: String
    Default: sample_database
  RdsUser:
    Description: Database Master User Name
    Type: String
    Default: postgresql
  RdsPassword:
    Description: Database Master User Password
    Type: String
    Default: postgresql
  SecurityGroupFromDev:
    Description: The local machine permitted SecurityGroup is needed as paramater for Dev.
    Type: String
    Default: "52.68.210.112/32"

Resources:
  RDSInstance:
    Type: AWS::RDS::DBInstance
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceIdentifier: sample-kubernetes-staging-postgresql
      DBName: !Ref DBName
      Engine: postgres
      MultiAZ: false
      PubliclyAccessible: true
      MasterUsername: !Ref RdsUser
      MasterUserPassword: !Ref RdsPassword
      DBInstanceClass: db.t3.micro
      AllocatedStorage: '20'
      DBSubnetGroupName: !Ref DBSubnetGroup
      MonitoringInterval: 10
      MonitoringRoleArn: !GetAtt DBMonitorRole.Arn
      VPCSecurityGroups:
         - !Ref SecurityGroupRdsPostgres

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB Subnet Group for Private Subnet
      SubnetIds:
        - Fn::ImportValue: !Sub ${VPCName}-PublicSubnet1
        - Fn::ImportValue: !Sub ${VPCName}-PublicSubnet2

  DBMonitorRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - monitoring.rds.amazonaws.com
            Action:
              - sts:AssumeRole

  SecurityGroupRdsPostgres:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroupRdsPostgres
      GroupDescription: db access
      VpcId:
        Fn::ImportValue: !Sub ${VPCName}-VPCID
      Tags:
        - Key: Name
          Value: !Sub ${VPCName}-SecurityGroupRdsPostgres

  SecurityGroupIngressRdsPostgres:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupRdsPostgres
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId:
        Fn::ImportValue: !Sub ${VPCName}-SecurityGroupEC2

  SecurityGroupIngressRdsFromDev:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroupRdsPostgres
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      CidrIp: !Ref SecurityGroupFromDev

Outputs:
  RDSInstance:
    Description: RDS for Production
    Value: !Ref RDSInstance
    Export:
      Name: !Sub ${VPCName}-RDS

  RDSDBNAME:
    Description: DB Name for SonarQube RDS
    Value: !Ref DBName
    Export:
      Name: !Sub ${VPCName}-RDS-DBName

  RDSProductionInstanceEndPoint:
    Description: RDS Endpoint
    Value: !GetAtt RDSInstance.Endpoint.Address
    Export:
      Name: !Sub ${VPCName}-RDS-Endpoint

  RDSUserName:
    Description: DB User Name for Master
    Value: !Ref RdsUser
    Export:
      Name: !Sub ${VPCName}-RDS-UserName

  RDSUserPassword:
    Description: DB User Password for Master
    Value: !Ref RdsPassword
    Export:
      Name: !Sub ${VPCName}-RDS-UserPassword
